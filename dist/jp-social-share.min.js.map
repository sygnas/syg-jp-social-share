{"version":3,"file":"jp-social-share.min.js","sources":["../src/index.ts"],"sourcesContent":["/**\r\n * 日本向けソーシャルシェアボタン\r\n *\r\n * @author   Hiroshi Fukuda <info.sygnas@gmail.com>\r\n * @license  MIT\r\n */\r\n\r\nimport { TService, TOption, TOptionWindow, TOptionWindowParam } from \"./types\";\r\n\r\nclass JpSocialShare {\r\n  // サービス名識別子\r\n  static SERVICES: { [key: string]: TService } = {\r\n    TWITTER: 'twitter',\r\n    FACEBOOK: 'facebook',\r\n    LINE: 'line',\r\n    FEEDLY: 'feedly',\r\n    POCKET: 'pocket',\r\n    HATEBU: 'hatebu',\r\n  };\r\n\r\n  static opt: TOption;\r\n\r\n  private static defaults: TOption = {\r\n    // window.open() のオプション\r\n    window: {\r\n      width: 550,\r\n      height: 450,\r\n      personalbar: 0,\r\n      toolbar: 0,\r\n      scrollbars: 1,\r\n      resizable: 1,\r\n    },\r\n    // シェア用URLのテンプレート\r\n    services: {\r\n      twitter:\r\n        'http://twitter.com/share?url={{URL}}&text={{MESSAGE}}&via={{ACCOUNT}}&related={{FOLLOW}}',\r\n      facebook: 'http://www.facebook.com/share.php?u={{URL}}',\r\n      line: 'line://msg/text/{{MESSAGE}} {{URL}}',\r\n      feedly: 'http://feedly.com/i/subscription/feed/{{URL}}',\r\n      pocket: 'http://getpocket.com/edit?url={{URL}}',\r\n      hatebu: '//b.hatena.ne.jp/add?mode=confirm&url={{URL}}&title={{MESSAGE}}',\r\n    },\r\n  };\r\n\r\n  ////////////////////////\r\n  ////////////////////////\r\n\r\n  /**\r\n   * シェアボタンのリンクを設定する\r\n   * @param {String} target 対象ボタンのセレクタ\r\n   * @param {Object} option 新規ウィンドウのパラメータ（defaults参照）\r\n   */\r\n  static setShareButton(target: string, option: TOption = {}): void {\r\n    // 設定のマージ\r\n    this.opt = Object.assign(this.defaults, option);\r\n\r\n    // クリックイベントを設定\r\n    this.getNodeArray(document.querySelectorAll<HTMLElement>(target)).forEach(\r\n      (elm) => {\r\n        elm.addEventListener('click', (ev: Event) => {\r\n          const elm = ev.currentTarget as HTMLElement;\r\n          this.openShareWindowWithElement(elm);\r\n          ev.preventDefault();\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * エレメントから情報を取得してシェア用ウィンドウを開く\r\n   */\r\n  static openShareWindowWithElement(elm: HTMLElement){\r\n    // エレメントからパラメータを取得\r\n    const service: TService = elm.getAttribute('data-share-service') as TService;\r\n    const url: string = elm.getAttribute('data-share-url') || '';\r\n    const message: string = elm.getAttribute('data-share-message') || document.title;\r\n    const account: string = elm.getAttribute('data-share-account') || '';\r\n    const follow: string = elm.getAttribute('data-share-follow') || '';\r\n\r\n    // シェア用ウィンドウを開く\r\n    this.openShareWindow(service, url, message, account, follow);\r\n  }\r\n\r\n  /**\r\n   * シェア用ウィンドウを開く\r\n   * @param service {String} ソーシャルサービス識別子\r\n   * @param url {String} シェアURL\r\n   * @param message {String} メッセージ本文\r\n   * @param account {String} ツイートに付けるRepleyアカウント\r\n   * @param follow {String} ツイート後に表示するフォロー候補アカウント\r\n   */\r\n  static openShareWindow(\r\n    service: TService,\r\n    url: string = '',\r\n    message: string = '',\r\n    account: string = '',\r\n    follow: string = ''\r\n  ): void {\r\n    // 存在しないサービスだったらエラー\r\n    if (\r\n      this.opt.services &&\r\n      Object.keys(this.opt.services).indexOf(service) === -1\r\n    ) {\r\n      console.log(`${service} is not supported.`);\r\n      return;\r\n    }\r\n\r\n    // テンプレートからコンバート\r\n    const openUrl: string = this.convertOpenUrl(\r\n      service,\r\n      url,\r\n      message,\r\n      account,\r\n      follow\r\n    );\r\n\r\n    // LINEはアプリに飛ばす。それ以外はウィンドウを開く\r\n    if (service === this.SERVICES.LINE) {\r\n      window.location.href = openUrl;\r\n    } else if (this.opt.window) {\r\n      const windowOption = this.getWindowOption(this.opt.window);\r\n      window.open(openUrl, `share_${service}`, windowOption);\r\n    } else {\r\n      console.log('Window option is not defined.');\r\n      return;\r\n    }\r\n  }\r\n\r\n  ////////////////////////\r\n  ////////////////////////\r\n\r\n  /**\r\n   * サービス毎のURLを取得\r\n   * パラメータによっては加工がされる\r\n   * @param service {String} ソーシャルサービス識別子\r\n   * @param url {String} シェアURL\r\n   * @param message {String} メッセージ本文\r\n   * @param account {String} ツイートに付けるRepleyアカウント\r\n   * @param follow {String} ツイート後に表示するフォロー候補アカウント\r\n   * @return {String} シェア窓オープンURL\r\n   */\r\n  private static convertOpenUrl(\r\n    service: TService,\r\n    url: string = '',\r\n    message: string = '',\r\n    account: string = '',\r\n    follow: string = ''\r\n  ): string {\r\n    const eu = encodeURIComponent;\r\n\r\n    const shareUrl = url || location.href;\r\n    let openUrl = this.opt.services ? this.opt.services[service] : \"\";\r\n\r\n    if (!openUrl) {\r\n      console.log(`${service} is not supported.`);\r\n      return \"\";\r\n    }\r\n\r\n    // Twitterだけパラメータの内容によってURLが変わる\r\n    if (service === this.SERVICES.TWITTER) {\r\n      if (!account) openUrl = openUrl.replace(\"&via={{ACCOUNT}}\", \"\");\r\n      if (!follow) openUrl = openUrl.replace(\"&related={{FOLLOW}}\", \"\");\r\n    }\r\n\r\n\r\n    openUrl = openUrl.replace(\"{{ACCOUNT}}\", eu(account));\r\n    openUrl = openUrl.replace(\"{{FOLLOW}}\", eu(follow));\r\n    openUrl = openUrl.replace(\"{{MESSAGE}}\", eu(message));\r\n    openUrl = openUrl.replace(\"{{URL}}\", eu(shareUrl));\r\n\r\n    return openUrl;\r\n  }\r\n\r\n  /**\r\n   * NodeListをArrayとして取り出す（IE対策）\r\n   */\r\n  private static getNodeArray(nodeList: NodeList) {\r\n    return Array.prototype.slice.call(nodeList, 0);\r\n  }\r\n\r\n  /**\r\n   * Windowパラメータ作成\r\n   * @param opt {Object} ウィンドウパラメータ\r\n   * @return {String} 新規ウィンドウのパラメータ文字列\r\n   */\r\n  private static getWindowOption(opt: TOptionWindow): string {\r\n    const items: string[] = [];\r\n\r\n    Object.keys(opt).forEach((key) => {\r\n      items.push(`${key}=${opt[key as TOptionWindowParam]}`);\r\n    });\r\n    return items.join(\",\");\r\n  }\r\n}\r\n\r\nexport default JpSocialShare;\r\n"],"names":["JpSocialShare","target","option","opt","Object","assign","this","defaults","getNodeArray","document","querySelectorAll","forEach","elm","addEventListener","ev","currentTarget","_this","openShareWindowWithElement","preventDefault","service","getAttribute","url","message","title","account","follow","openShareWindow","services","keys","indexOf","console","log","openUrl","convertOpenUrl","SERVICES","LINE","window","location","href","windowOption","getWindowOption","open","eu","encodeURIComponent","shareUrl","TWITTER","replace","nodeList","Array","prototype","slice","call","items","key","push","join","FACEBOOK","FEEDLY","POCKET","HATEBU","width","height","personalbar","toolbar","scrollbars","resizable","twitter","facebook","line","feedly","pocket","hatebu"],"mappings":";;;;;;SASMA,6LA2CkBC,cAAgBC,yDAAkB,QAEjDC,IAAMC,OAAOC,OAAOC,KAAKC,SAAUL,QAGnCM,aAAaC,SAASC,iBAA8BT,IAASU,SAChE,SAACC,GACCA,EAAIC,iBAAiB,SAAS,SAACC,OACvBF,EAAME,EAAGC,cACfC,EAAKC,2BAA2BL,GAChCE,EAAGI,iEASX,SAAkCN,OAE1BO,EAAoBP,EAAIQ,aAAa,sBACrCC,EAAcT,EAAIQ,aAAa,mBAAqB,GACpDE,EAAkBV,EAAIQ,aAAa,uBAAyBX,SAASc,MACrEC,EAAkBZ,EAAIQ,aAAa,uBAAyB,GAC5DK,EAAiBb,EAAIQ,aAAa,sBAAwB,QAG3DM,gBAAgBP,EAASE,EAAKC,EAASE,EAASC,kCAWvD,SACEN,OACAE,yDAAc,GACdC,yDAAkB,GAClBE,yDAAkB,GAClBC,yDAAiB,MAIfnB,KAAKH,IAAIwB,WAC4C,IAArDvB,OAAOwB,KAAKtB,KAAKH,IAAIwB,UAAUE,QAAQV,GAEvCW,QAAQC,cAAOZ,kCAKXa,EAAkB1B,KAAK2B,eAC3Bd,EACAE,EACAC,EACAE,EACAC,MAIEN,IAAYb,KAAK4B,SAASC,KAC5BC,OAAOC,SAASC,KAAON,MAClB,CAAA,IAAI1B,KAAKH,IAAIiC,mBAIlBN,QAAQC,IAAI,qCAHNQ,EAAejC,KAAKkC,gBAAgBlC,KAAKH,IAAIiC,QACnDA,OAAOK,KAAKT,kBAAkBb,GAAWoB,mCAoBrC,SACNpB,OACAE,yDAAc,GACdC,yDAAkB,GAClBE,yDAAkB,GAClBC,yDAAiB,GAEXiB,EAAKC,mBAELC,EAAWvB,GAAOgB,SAASC,KAC7BN,EAAU1B,KAAKH,IAAIwB,SAAWrB,KAAKH,IAAIwB,SAASR,GAAW,UAE1Da,GAMDb,IAAYb,KAAK4B,SAASW,UACvBrB,IAASQ,EAAUA,EAAQc,QAAQ,mBAAoB,KACvDrB,IAAQO,EAAUA,EAAQc,QAAQ,sBAAuB,MAOhEd,GADAA,GADAA,GADAA,EAAUA,EAAQc,QAAQ,cAAeJ,EAAGlB,KAC1BsB,QAAQ,aAAcJ,EAAGjB,KACzBqB,QAAQ,cAAeJ,EAAGpB,KAC1BwB,QAAQ,UAAWJ,EAAGE,MAdtCd,QAAQC,cAAOZ,yBACR,gCAqBH,SAAoB4B,UACnBC,MAAMC,UAAUC,MAAMC,KAAKJ,EAAU,kCAQtC,SAAuB5C,OACvBiD,EAAkB,UAExBhD,OAAOwB,KAAKzB,GAAKQ,SAAQ,SAAC0C,GACxBD,EAAME,eAAQD,cAAOlD,EAAIkD,QAEpBD,EAAMG,KAAK,2DAtLhBvD,aAE2C,CAC7C6C,QAAS,UACTW,SAAU,WACVrB,KAAM,OACNsB,OAAQ,SACRC,OAAQ,SACRC,OAAQ,aARN3D,kBAAAA,aAa+B,CAEjCoC,OAAQ,CACNwB,MAAO,IACPC,OAAQ,IACRC,YAAa,EACbC,QAAS,EACTC,WAAY,EACZC,UAAW,GAGbtC,SAAU,CACRuC,QACE,2FACFC,SAAU,8CACVC,KAAM,sCACNC,OAAQ,gDACRC,OAAQ,wCACRC,OAAQ"}